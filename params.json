{
  "name": "Angular-bootstrap-kickstart",
  "tagline": "An optimization-based kickstart for web application development with AngularJS and bootstrap",
  "body": "# [angular-bootstrap-kickstart](https://github.com/yahoohung/angular-bootstrap-kickstart)\r\n\r\n**Speed up your [AngularJS](http://angularjs.org) and [Bootstrap](http://getbootstrap.com) development a complete and scalable gulpjs based build system that scaffolds the project for you. Just focus on your app, angular-bootstrap-kickstart will take care of the rest.**\r\n***\r\n\r\n### Demo\r\n\r\n[here](http://net.nevesoft.com/angular-bootstrap-kickstart/)\r\n\r\n### What and Why\r\n\r\nangular-bootstrap-kickstart is an optimization-based kickstart for web application development with AngularJS and bootstrap. It makes your development and testing easy, keeps the structure of the project consistent and allows you to create a fully optimized production release with ease.\r\n\r\n### Getting started\r\n\r\nInstall angular-bootstrap-kickstart downloading the [latest release](https://github.com/yahoohung/angular-bootstrap-kickstart/releases) or clone the master branch if you want to run the development version.\r\n\r\n    $ git clone --depth 1 https://github.com/yahoohung/angular-bootstrap-kickstart.git \r\n    \r\n    or\r\n    \r\n    $ git clone --depth 1 https://github.com/yahoohung/angular-bootstrap-kickstart.git your-project-name\r\n\r\nInstall **node.js**. Then **gulp** and **bower** then install bower and npm dependencies.\r\n\r\n    $ npm install gulp bower -g && npm install && bower install\r\n\r\nRun the application in **development mode**.\r\n\r\n    $ gulp serve\r\n\r\nYou are now ready to go, your applcation is available at **http://127.0.0.1:3000**.\r\n\r\n**Every file you add, edit or delete into the `/client` folder will be handled by the build system**.\r\n\r\n\r\nWhen you are ready to build a **production release** there is a task for that:\r\n\r\n    $ gulp serve:dist\r\n\r\nThis task will lint your minified code, css, js and images files, run unit tests. After the task has successfully finished, you can find an optimized version of your project inside the  `/build/dist` folder. Just copy it deploy to your host then enjoy your coffee.\r\n\r\n### Features\r\n\r\n* 5 simple task: `gulp serve`,`gulp serve:dist`, `gulp serve:tdd`, `gulp test:unit`, `gulp test:e2e`\r\n* JavaScript file continuous linting with `jshint`.\r\n* LESS continuous compiling.\r\n* CSS, JS files minify in production mode.\r\n* `Unit` and `e2e` testing support. (for `e2e` testing you need to have a java runtine installed, take a look at [selenium JavaScript api ](http://selenium.googlecode.com/git/docs/api/javascript/index.html) and [protractor](https://github.com/angular/protractor) for more information.\r\n* HTML templates converted into strings and attached to a single javascript file (to avoid one http call for each template).\r\n* Livereload provided by [browsersync](http://www.browsersync.io/).\r\n* angular module dependencies automatically injected using [ng-annotate](https://github.com/olov/ng-annotate).\r\n* Static resources minification and optimization for production.\r\n* sourcemaps generated and embedded in JavaScript and css files during the production optimization.\r\n\r\n### Directory Structure\r\n\r\n* `build/` - Build files and configuration, the most important files to note are `build.config.js`, `protractor.config.js` and `karma.config.js`. These files are the heart of the build system. Take a look.\r\n* `client/` the source code and tests of your application, take a look at the modules in this folder, you should structure your application following those conventions, but you can choose another convention as well.\r\n* `client/src/app` the area that you have to care about\r\n* `client/src/less/main.less` stylesheet file\r\n* `.bowerrc` - the bower configuration file. This tells Bower to install components in the `client/src/vendor` directory.\r\n* `.jshintrc` - JSHint configuration.\r\n* `gulpfile` - see [The Build System](#thebuildsystem) below.\r\n* `bower.json` - Contains the list of bower dependencies.\r\n* `package.json` - node.js dependencies.\r\n\r\n### <a name=\"thebuildsystem\"></a>The Build System\r\n\r\nThere are some `tasks` available in `gulpfile.js`. You can dig into the file to familiarize yourself with gulpjs.\r\n\r\nA description of every available task:\r\n\r\n* **gulp serve** - When this task runs, the build will take care of watching files. Every time you change a file in the `client/` folder, the build recompiles every file, and your browser will reload automagically showing you the changes.\r\nYou just need to add new JavaScript and css files in the `client/index.html` file.\r\n* **gulp serve:dist** - This task will run jshint and unit tests under the `client/test/unit` folder (thanks to `karma runner`), and create a fully-optimized version of your application under the `build/dist/` folder. The optimization consists of concatenate, minify and compress js and css files, optimize images, and put every template into a js file loaded by the application.\r\nA code coverage report will be available inside the `client/test/unit-results`.\r\n**Note to change browser-sync's server port, change the 'port' and 'uiIPort' settings in build/build.config.js.**\r\n* **gulp serve:tdd** - Just like `gulp serve` but in continuous unit testing environment.\r\n* **gulp test:unit** - For running unit tests one time then exit.\r\n* **gulp test:e2e** - Run end-to-end tests inside the `client/test/e2e` folder with `protractor`. If a test fails, you should find a screenshot of the page inside the `client/test/screenshots` folder.\r\n**Note that you need to have the application running in order to run e2e tests. You can launch this task from another terminal instance.**\r\n\r\n### Contributing\r\n\r\nPR and issues reporting are always welcome :)\r\n\r\n### License\r\n\r\nSee LICENSE file\r\n\r\n### Changelog\r\n\r\nSee CHANGELOG.md file\r\n\r\n### Thank you\r\n\r\nThis project folk from https://github.com/vesparny/angular-kickstart/",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}